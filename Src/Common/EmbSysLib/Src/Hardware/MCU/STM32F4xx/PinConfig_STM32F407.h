//###################################################################
//
// DON'T EDIT!
//
// This file is auto generated by
//    >php -f PinConfig.php PinConfig_STM32F407.csv
//
//###################################################################


//*******************************************************************
#include "Mcu_Types.h"
#include "Std/Report.h"

//*******************************************************************
namespace EmbSysLib {
namespace Hw {

//*******************************************************************
/*!
\class PinConfig

\brief Port pin configuration

This class provides methods to
- configure GPIO mode, type, pull-up/-down, speed and alternate
  function
- connect a GPIO to an alternate function
*/
class PinConfig
{
  public:
    //---------------------------------------------------------------
    /*! \enum MODE
        \brief Pin mode configuration
    */
    typedef enum
    {
      // MODER
      INPUT          = 0x0000, //!< Input mode
      OUTPUT         = 0x0001, //!< Output mode
      ALTERNATE_FUNC = 0x0002, //!< Alternate function
      ANALOG         = 0x0003, //!< Analog I/O

      // OTYPER
      PUSH_PULL      = 0x0000, //!< Enable push-pull
      OPEN_DRAIN     = 0x0010, //!< Disable push-pull

      //PUPDR
      NO_PUPD        = 0x0000, //!< No pull-up or pull down
      PULL_UP        = 0x0100, //!< Enable pull-up
      PULL_DOWN      = 0x0200, //!< Enable pull-down

      //OSPEEDR
      LOW_SPEED      = 0x0000, //!< Low speed mode
      MEDIUM_SPEED   = 0x1000, //!< Medium speed mode
      FAST_SPEED     = 0x2000, //!< Fast speed mode
      HIGH_SPEED     = 0x3000  //!< High speed mode

    } MODE;

    //---------------------------------------------------------------
    /*! Alternate functions of the MCU
    */
    typedef enum
    { 
      ADC123_IN0,
      ADC123_IN1,
      ADC123_IN10,
      ADC123_IN11,
      ADC123_IN12,
      ADC123_IN13,
      ADC123_IN2,
      ADC123_IN3,
      ADC12_IN14,
      ADC12_IN15,
      ADC12_IN4,
      ADC12_IN5,
      ADC12_IN6,
      ADC12_IN7,
      ADC12_IN8,
      ADC12_IN9,
      ADC3_IN14,
      ADC3_IN15,
      ADC3_IN4,
      ADC3_IN5,
      ADC3_IN6,
      ADC3_IN7,
      ADC3_IN8,
      ADC3_IN9,
      CAN1_RX,
      CAN1_TX,
      CAN2_RX,
      CAN2_TX,
      DAC1_OUT,
      DAC2_OUT,
      DCMI_D0,
      DCMI_D1,
      DCMI_D10,
      DCMI_D11,
      DCMI_D12,
      DCMI_D13,
      DCMI_D2,
      DCMI_D3,
      DCMI_D4,
      DCMI_D5,
      DCMI_D6,
      DCMI_D7,
      DCMI_D8,
      DCMI_D9,
      DCMI_HSYNC,
      DCMI_PIXCK,
      DCMI_VSYNC,
      ETH_MDC,
      ETH_MDIO,
      ETH_MII_COL,
      ETH_MII_CRS,
      ETH_MII_RXD0,
      ETH_MII_RXD1,
      ETH_MII_RXD2,
      ETH_MII_RXD3,
      ETH_MII_RX_CLK,
      ETH_MII_RX_DV,
      ETH_MII_RX_ER,
      ETH_MII_TXD0,
      ETH_MII_TXD1,
      ETH_MII_TXD2,
      ETH_MII_TXD3,
      ETH_MII_TX_CLK,
      ETH_MII_TX_EN,
      ETH_PPS_OUT,
      ETH_RMII_CRS_DV,
      ETH_RMII_RXD0,
      ETH_RMII_TXD0,
      ETH_RMII_TXD1,
      ETH_RMII_TX_EN,
      FSMC_A0,
      FSMC_A1,
      FSMC_A10,
      FSMC_A11,
      FSMC_A12,
      FSMC_A13,
      FSMC_A14,
      FSMC_A15,
      FSMC_A16,
      FSMC_A17,
      FSMC_A18,
      FSMC_A19,
      FSMC_A2,
      FSMC_A20,
      FSMC_A21,
      FSMC_A22,
      FSMC_A23,
      FSMC_A24,
      FSMC_A25,
      FSMC_A3,
      FSMC_A4,
      FSMC_A5,
      FSMC_A6,
      FSMC_A7,
      FSMC_A8,
      FSMC_A9,
      FSMC_BLN1,
      FSMC_CD,
      FSMC_CLK,
      FSMC_D0,
      FSMC_D1,
      FSMC_D10,
      FSMC_D11,
      FSMC_D12,
      FSMC_D13,
      FSMC_D14,
      FSMC_D15,
      FSMC_D2,
      FSMC_D3,
      FSMC_D4,
      FSMC_D5,
      FSMC_D6,
      FSMC_D7,
      FSMC_D8,
      FSMC_D9,
      FSMC_INT2,
      FSMC_INT3,
      FSMC_INTR,
      FSMC_NBL0,
      FSMC_NCE2,
      FSMC_NCE3,
      FSMC_NCE4_1,
      FSMC_NCE4_2,
      FSMC_NE1,
      FSMC_NE2,
      FSMC_NE3,
      FSMC_NE4,
      FSMC_NIORD,
      FSMC_NIOWR,
      FSMC_NL,
      FSMC_NOE,
      FSMC_NREG,
      FSMC_NWAIT,
      FSMC_NWE,
      I2C1_SCL,
      I2C1_SDA,
      I2C1_SMBA,
      I2C2_SCL,
      I2C2_SDA,
      I2C2_SMBA,
      I2C3_SCL,
      I2C3_SDA,
      I2C3_SMBA,
      I2S2_CK,
      I2S2_MCK,
      I2S2_SD,
      I2S2_WS,
      I2S2ext_SD,
      I2S3S_CK,
      I2S3S_WS,
      I2S3_CK,
      I2S3_MCK,
      I2S3_SD,
      I2S3_WS,
      I2S3ext_SD,
      I2S_CKIN,
      OTG_FS_DM,
      OTG_FS_DP,
      OTG_FS_ID,
      OTG_FS_SOF,
      OTG_HS_DM,
      OTG_HS_DP,
      OTG_HS_ID,
      OTG_HS_SOF,
      OTG_HS_ULPI_CK,
      OTG_HS_ULPI_D0,
      OTG_HS_ULPI_D1,
      OTG_HS_ULPI_D2,
      OTG_HS_ULPI_D3,
      OTG_HS_ULPI_D4,
      OTG_HS_ULPI_D5,
      OTG_HS_ULPI_D6,
      OTG_HS_ULPI_D7,
      OTG_HS_ULPI_DIR,
      OTG_HS_ULPI_NXT,
      OTG_HS_ULPI_STP,
      SDIO_CK,
      SDIO_CMD,
      SDIO_D0,
      SDIO_D1,
      SDIO_D2,
      SDIO_D3,
      SDIO_D4,
      SDIO_D5,
      SDIO_D6,
      SDIO_D7,
      SPI1_MISO,
      SPI1_MOSI,
      SPI1_NSS,
      SPI1_SCK,
      SPI2_MISO,
      SPI2_MOSI,
      SPI2_NSS,
      SPI2_SCK,
      SPI3_MISO,
      SPI3_MOSI,
      SPI3_NSS,
      SPI3_SCK,
      TIM10_CH1,
      TIM11_CH1,
      TIM12_CH1,
      TIM12_CH2,
      TIM13_CH1,
      TIM14_CH1,
      TIM1_BKIN,
      TIM1_CH1,
      TIM1_CH1N,
      TIM1_CH2,
      TIM1_CH2N,
      TIM1_CH3,
      TIM1_CH3N,
      TIM1_CH4,
      TIM1_ETR,
      TIM2_CH1,
      TIM2_CH2,
      TIM2_CH3,
      TIM2_CH4,
      TIM2_ETR,
      TIM3_CH1,
      TIM3_CH2,
      TIM3_CH3,
      TIM3_CH4,
      TIM3_ETR,
      TIM4_CH1,
      TIM4_CH2,
      TIM4_CH3,
      TIM4_CH4,
      TIM4_ETR,
      TIM5_CH1,
      TIM5_CH2,
      TIM5_CH3,
      TIM5_CH4,
      TIM8_BKIN,
      TIM8_CH1,
      TIM8_CH1N,
      TIM8_CH2,
      TIM8_CH2N,
      TIM8_CH3,
      TIM8_CH3N,
      TIM8_CH4,
      TIM8_ETR,
      TIM9_CH1,
      TIM9_CH2,
      UART4_RX,
      UART4_TX,
      UART5_RX,
      UART5_TX,
      UART6_CTS,
      USART1_CK,
      USART1_CTS,
      USART1_RTS,
      USART1_RX,
      USART1_TX,
      USART2_CK,
      USART2_CTS,
      USART2_RTS,
      USART2_RX,
      USART2_TX,
      USART3_CK,
      USART3_CTS,
      USART3_RTS,
      USART3_RX,
      USART3_TX,
      USART6_CK,
      USART6_CTS,
      USART6_RTS,
      USART6_RX,
      USART6_TX,
    } Function;

    //---------------------------------------------------------------
    /*! Pin function mapping

        Maps an alternate function to a port pin and alternate function ID.
       'ADC12_IN4_PA4' means: The function 'ADC12_IN4' is mapped to pin PA4
    */
    typedef enum
    { 
      ADC123_IN0_PA0       = (ADC123_IN0          <<16)|( 0<<12)|( 0<<4)|( 0<<0), //!<\n
      ADC123_IN1_PA1       = (ADC123_IN1          <<16)|( 0<<12)|( 1<<4)|( 0<<0), //!<\n
      ADC123_IN10_PC0      = (ADC123_IN10         <<16)|( 2<<12)|( 0<<4)|( 0<<0), //!<\n
      ADC123_IN11_PC1      = (ADC123_IN11         <<16)|( 2<<12)|( 1<<4)|( 0<<0), //!<\n
      ADC123_IN12_PC2      = (ADC123_IN12         <<16)|( 2<<12)|( 2<<4)|( 0<<0), //!<\n
      ADC123_IN13_PC3      = (ADC123_IN13         <<16)|( 2<<12)|( 3<<4)|( 0<<0), //!<\n
      ADC123_IN2_PA2       = (ADC123_IN2          <<16)|( 0<<12)|( 2<<4)|( 0<<0), //!<\n
      ADC123_IN3_PA3       = (ADC123_IN3          <<16)|( 0<<12)|( 3<<4)|( 0<<0), //!<\n
      ADC12_IN14_PC4       = (ADC12_IN14          <<16)|( 2<<12)|( 4<<4)|( 0<<0), //!<\n
      ADC12_IN15_PC5       = (ADC12_IN15          <<16)|( 2<<12)|( 5<<4)|( 0<<0), //!<\n
      ADC12_IN4_PA4        = (ADC12_IN4           <<16)|( 0<<12)|( 4<<4)|( 0<<0), //!<\n
      ADC12_IN5_PA5        = (ADC12_IN5           <<16)|( 0<<12)|( 5<<4)|( 0<<0), //!<\n
      ADC12_IN6_PA6        = (ADC12_IN6           <<16)|( 0<<12)|( 6<<4)|( 0<<0), //!<\n
      ADC12_IN7_PA7        = (ADC12_IN7           <<16)|( 0<<12)|( 7<<4)|( 0<<0), //!<\n
      ADC12_IN8_PB0        = (ADC12_IN8           <<16)|( 1<<12)|( 0<<4)|( 0<<0), //!<\n
      ADC12_IN9_PB1        = (ADC12_IN9           <<16)|( 1<<12)|( 1<<4)|( 0<<0), //!<\n
      ADC3_IN14_PF4        = (ADC3_IN14           <<16)|( 5<<12)|( 4<<4)|( 0<<0), //!<\n
      ADC3_IN15_PF5        = (ADC3_IN15           <<16)|( 5<<12)|( 5<<4)|( 0<<0), //!<\n
      ADC3_IN4_PF6         = (ADC3_IN4            <<16)|( 5<<12)|( 6<<4)|( 0<<0), //!<\n
      ADC3_IN5_PF7         = (ADC3_IN5            <<16)|( 5<<12)|( 7<<4)|( 0<<0), //!<\n
      ADC3_IN6_PF8         = (ADC3_IN6            <<16)|( 5<<12)|( 8<<4)|( 0<<0), //!<\n
      ADC3_IN7_PF9         = (ADC3_IN7            <<16)|( 5<<12)|( 9<<4)|( 0<<0), //!<\n
      ADC3_IN8_PE10        = (ADC3_IN8            <<16)|( 4<<12)|(10<<4)|( 0<<0), //!<\n
      ADC3_IN9_PF3         = (ADC3_IN9            <<16)|( 5<<12)|( 3<<4)|( 0<<0), //!<\n
      CAN1_RX_PA11         = (CAN1_RX             <<16)|( 0<<12)|(11<<4)|( 9<<0), //!<\n
      CAN1_RX_PB8          = (CAN1_RX             <<16)|( 1<<12)|( 8<<4)|( 9<<0), //!<\n
      CAN1_RX_PD0          = (CAN1_RX             <<16)|( 3<<12)|( 0<<4)|( 9<<0), //!<\n
      CAN1_RX_PI9          = (CAN1_RX             <<16)|( 8<<12)|( 9<<4)|( 9<<0), //!<\n
      CAN1_TX_PA12         = (CAN1_TX             <<16)|( 0<<12)|(12<<4)|( 9<<0), //!<\n
      CAN1_TX_PB9          = (CAN1_TX             <<16)|( 1<<12)|( 9<<4)|( 9<<0), //!<\n
      CAN1_TX_PD1          = (CAN1_TX             <<16)|( 3<<12)|( 1<<4)|( 9<<0), //!<\n
      CAN1_TX_PH13         = (CAN1_TX             <<16)|( 7<<12)|(13<<4)|( 9<<0), //!<\n
      CAN2_RX_PB12         = (CAN2_RX             <<16)|( 1<<12)|(12<<4)|( 9<<0), //!<\n
      CAN2_RX_PB5          = (CAN2_RX             <<16)|( 1<<12)|( 5<<4)|( 9<<0), //!<\n
      CAN2_TX_PB13         = (CAN2_TX             <<16)|( 1<<12)|(13<<4)|( 9<<0), //!<\n
      CAN2_TX_PB6          = (CAN2_TX             <<16)|( 1<<12)|( 6<<4)|( 9<<0), //!<\n
      DAC1_OUT_PA4         = (DAC1_OUT            <<16)|( 0<<12)|( 4<<4)|( 0<<0), //!<\n
      DAC2_OUT_PA5         = (DAC2_OUT            <<16)|( 0<<12)|( 5<<4)|( 0<<0), //!<\n
      DCMI_D0_PA9          = (DCMI_D0             <<16)|( 0<<12)|( 9<<4)|(13<<0), //!<\n
      DCMI_D0_PC6          = (DCMI_D0             <<16)|( 2<<12)|( 6<<4)|(13<<0), //!<\n
      DCMI_D0_PH9          = (DCMI_D0             <<16)|( 7<<12)|( 9<<4)|(13<<0), //!<\n
      DCMI_D1_PA10         = (DCMI_D1             <<16)|( 0<<12)|(10<<4)|(13<<0), //!<\n
      DCMI_D1_PC7          = (DCMI_D1             <<16)|( 2<<12)|( 7<<4)|(13<<0), //!<\n
      DCMI_D1_PH10         = (DCMI_D1             <<16)|( 7<<12)|(10<<4)|(13<<0), //!<\n
      DCMI_D10_PB5         = (DCMI_D10            <<16)|( 1<<12)|( 5<<4)|(13<<0), //!<\n
      DCMI_D10_PI3         = (DCMI_D10            <<16)|( 8<<12)|( 3<<4)|(13<<0), //!<\n
      DCMI_D11_PD2         = (DCMI_D11            <<16)|( 3<<12)|( 2<<4)|(13<<0), //!<\n
      DCMI_D11_PH15        = (DCMI_D11            <<16)|( 7<<12)|(15<<4)|(13<<0), //!<\n
      DCMI_D12_PF11        = (DCMI_D12            <<16)|( 5<<12)|(11<<4)|(13<<0), //!<\n
      DCMI_D13_PG15        = (DCMI_D13            <<16)|( 6<<12)|(15<<4)|(13<<0), //!<\n
      DCMI_D13_PI0         = (DCMI_D13            <<16)|( 8<<12)|( 0<<4)|(13<<0), //!<\n
      DCMI_D2_PC8          = (DCMI_D2             <<16)|( 2<<12)|( 8<<4)|(13<<0), //!<\n
      DCMI_D2_PE0          = (DCMI_D2             <<16)|( 4<<12)|( 0<<4)|(13<<0), //!<\n
      DCMI_D2_PH11         = (DCMI_D2             <<16)|( 7<<12)|(11<<4)|(13<<0), //!<\n
      DCMI_D3_PC9          = (DCMI_D3             <<16)|( 2<<12)|( 9<<4)|(13<<0), //!<\n
      DCMI_D3_PE1          = (DCMI_D3             <<16)|( 4<<12)|( 1<<4)|(13<<0), //!<\n
      DCMI_D3_PH12         = (DCMI_D3             <<16)|( 7<<12)|(12<<4)|(13<<0), //!<\n
      DCMI_D4_PC11         = (DCMI_D4             <<16)|( 2<<12)|(11<<4)|(13<<0), //!<\n
      DCMI_D4_PE4          = (DCMI_D4             <<16)|( 4<<12)|( 4<<4)|(13<<0), //!<\n
      DCMI_D4_PH14         = (DCMI_D4             <<16)|( 7<<12)|(14<<4)|(13<<0), //!<\n
      DCMI_D5_PB6          = (DCMI_D5             <<16)|( 1<<12)|( 6<<4)|(13<<0), //!<\n
      DCMI_D5_PI4          = (DCMI_D5             <<16)|( 8<<12)|( 4<<4)|(13<<0), //!<\n
      DCMI_D6_PB8          = (DCMI_D6             <<16)|( 1<<12)|( 8<<4)|(13<<0), //!<\n
      DCMI_D6_PE5          = (DCMI_D6             <<16)|( 4<<12)|( 5<<4)|(13<<0), //!<\n
      DCMI_D6_PI6          = (DCMI_D6             <<16)|( 8<<12)|( 6<<4)|(13<<0), //!<\n
      DCMI_D7_PB9          = (DCMI_D7             <<16)|( 1<<12)|( 9<<4)|(13<<0), //!<\n
      DCMI_D7_PE6          = (DCMI_D7             <<16)|( 4<<12)|( 6<<4)|(13<<0), //!<\n
      DCMI_D7_PI7          = (DCMI_D7             <<16)|( 8<<12)|( 7<<4)|(13<<0), //!<\n
      DCMI_D8_PC10         = (DCMI_D8             <<16)|( 2<<12)|(10<<4)|(13<<0), //!<\n
      DCMI_D8_PI1          = (DCMI_D8             <<16)|( 8<<12)|( 1<<4)|(13<<0), //!<\n
      DCMI_D9_PC12         = (DCMI_D9             <<16)|( 2<<12)|(12<<4)|(13<<0), //!<\n
      DCMI_D9_PI2          = (DCMI_D9             <<16)|( 8<<12)|( 2<<4)|(13<<0), //!<\n
      DCMI_HSYNC_PA4       = (DCMI_HSYNC          <<16)|( 0<<12)|( 4<<4)|(13<<0), //!<\n
      DCMI_HSYNC_PH8       = (DCMI_HSYNC          <<16)|( 7<<12)|( 8<<4)|(13<<0), //!<\n
      DCMI_PIXCK_PA6       = (DCMI_PIXCK          <<16)|( 0<<12)|( 6<<4)|(13<<0), //!<\n
      DCMI_VSYNC_PB7       = (DCMI_VSYNC          <<16)|( 1<<12)|( 7<<4)|(13<<0), //!<\n
      DCMI_VSYNC_PI5       = (DCMI_VSYNC          <<16)|( 8<<12)|( 5<<4)|(13<<0), //!<\n
      ETH_MDC_PC1          = (ETH_MDC             <<16)|( 2<<12)|( 1<<4)|(11<<0), //!<\n
      ETH_MDIO_PA2         = (ETH_MDIO            <<16)|( 0<<12)|( 2<<4)|(11<<0), //!<\n
      ETH_MII_COL_PA3      = (ETH_MII_COL         <<16)|( 0<<12)|( 3<<4)|(11<<0), //!<\n
      ETH_MII_COL_PH3      = (ETH_MII_COL         <<16)|( 7<<12)|( 3<<4)|(11<<0), //!<\n
      ETH_MII_CRS_PA0      = (ETH_MII_CRS         <<16)|( 0<<12)|( 0<<4)|(11<<0), //!<\n
      ETH_MII_CRS_PH2      = (ETH_MII_CRS         <<16)|( 7<<12)|( 2<<4)|(11<<0), //!<\n
      ETH_MII_RXD0_PC4     = (ETH_MII_RXD0        <<16)|( 2<<12)|( 4<<4)|(11<<0), //!<\n
      ETH_MII_RXD1_PC5     = (ETH_MII_RXD1        <<16)|( 2<<12)|( 5<<4)|(11<<0), //!<\n
      ETH_MII_RXD2_PB0     = (ETH_MII_RXD2        <<16)|( 1<<12)|( 0<<4)|(11<<0), //!<\n
      ETH_MII_RXD2_PH6     = (ETH_MII_RXD2        <<16)|( 7<<12)|( 6<<4)|(11<<0), //!<\n
      ETH_MII_RXD3_PB1     = (ETH_MII_RXD3        <<16)|( 1<<12)|( 1<<4)|(11<<0), //!<\n
      ETH_MII_RXD3_PH7     = (ETH_MII_RXD3        <<16)|( 7<<12)|( 7<<4)|(11<<0), //!<\n
      ETH_MII_RX_CLK_PA1   = (ETH_MII_RX_CLK      <<16)|( 0<<12)|( 1<<4)|(11<<0), //!<\n
      ETH_MII_RX_DV_PA7    = (ETH_MII_RX_DV       <<16)|( 0<<12)|( 7<<4)|(11<<0), //!<\n
      ETH_MII_RX_ER_PB10   = (ETH_MII_RX_ER       <<16)|( 1<<12)|(10<<4)|(11<<0), //!<\n
      ETH_MII_RX_ER_PI10   = (ETH_MII_RX_ER       <<16)|( 8<<12)|(10<<4)|(11<<0), //!<\n
      ETH_MII_TXD0_PB12    = (ETH_MII_TXD0        <<16)|( 1<<12)|(12<<4)|(11<<0), //!<\n
      ETH_MII_TXD0_PG13    = (ETH_MII_TXD0        <<16)|( 6<<12)|(13<<4)|(11<<0), //!<\n
      ETH_MII_TXD1_PB13    = (ETH_MII_TXD1        <<16)|( 1<<12)|(13<<4)|(11<<0), //!<\n
      ETH_MII_TXD1_PG14    = (ETH_MII_TXD1        <<16)|( 6<<12)|(14<<4)|(11<<0), //!<\n
      ETH_MII_TXD2_PC2     = (ETH_MII_TXD2        <<16)|( 2<<12)|( 2<<4)|(11<<0), //!<\n
      ETH_MII_TXD3_PB8     = (ETH_MII_TXD3        <<16)|( 1<<12)|( 8<<4)|(11<<0), //!<\n
      ETH_MII_TXD3_PE2     = (ETH_MII_TXD3        <<16)|( 4<<12)|( 2<<4)|(11<<0), //!<\n
      ETH_MII_TX_CLK_PC3   = (ETH_MII_TX_CLK      <<16)|( 2<<12)|( 3<<4)|(11<<0), //!<\n
      ETH_MII_TX_EN_PB11   = (ETH_MII_TX_EN       <<16)|( 1<<12)|(11<<4)|(11<<0), //!<\n
      ETH_MII_TX_EN_PG11   = (ETH_MII_TX_EN       <<16)|( 6<<12)|(11<<4)|(11<<0), //!<\n
      ETH_PPS_OUT_PB5      = (ETH_PPS_OUT         <<16)|( 1<<12)|( 5<<4)|(11<<0), //!<\n
      ETH_PPS_OUT_PG8      = (ETH_PPS_OUT         <<16)|( 6<<12)|( 8<<4)|(11<<0), //!<\n
      ETH_RMII_CRS_DV_PA7  = (ETH_RMII_CRS_DV     <<16)|( 0<<12)|( 7<<4)|(11<<0), //!<\n
      ETH_RMII_RXD0_PC4    = (ETH_RMII_RXD0       <<16)|( 2<<12)|( 4<<4)|(11<<0), //!<\n
      ETH_RMII_TXD0_PB12   = (ETH_RMII_TXD0       <<16)|( 1<<12)|(12<<4)|(11<<0), //!<\n
      ETH_RMII_TXD0_PG13   = (ETH_RMII_TXD0       <<16)|( 6<<12)|(13<<4)|(11<<0), //!<\n
      ETH_RMII_TXD1_PB13   = (ETH_RMII_TXD1       <<16)|( 1<<12)|(13<<4)|(11<<0), //!<\n
      ETH_RMII_TXD1_PG14   = (ETH_RMII_TXD1       <<16)|( 6<<12)|(14<<4)|(11<<0), //!<\n
      ETH_RMII_TX_EN_PB11  = (ETH_RMII_TX_EN      <<16)|( 1<<12)|(11<<4)|(11<<0), //!<\n
      ETH_RMII_TX_EN_PG11  = (ETH_RMII_TX_EN      <<16)|( 6<<12)|(11<<4)|(11<<0), //!<\n
      FSMC_A0_PF0          = (FSMC_A0             <<16)|( 5<<12)|( 0<<4)|(12<<0), //!<\n
      FSMC_A1_PF1          = (FSMC_A1             <<16)|( 5<<12)|( 1<<4)|(12<<0), //!<\n
      FSMC_A10_PG0         = (FSMC_A10            <<16)|( 6<<12)|( 0<<4)|(12<<0), //!<\n
      FSMC_A11_PG1         = (FSMC_A11            <<16)|( 6<<12)|( 1<<4)|(12<<0), //!<\n
      FSMC_A12_PG2         = (FSMC_A12            <<16)|( 6<<12)|( 2<<4)|(12<<0), //!<\n
      FSMC_A13_PG3         = (FSMC_A13            <<16)|( 6<<12)|( 3<<4)|(12<<0), //!<\n
      FSMC_A14_PG4         = (FSMC_A14            <<16)|( 6<<12)|( 4<<4)|(12<<0), //!<\n
      FSMC_A15_PG5         = (FSMC_A15            <<16)|( 6<<12)|( 5<<4)|(12<<0), //!<\n
      FSMC_A16_PD11        = (FSMC_A16            <<16)|( 3<<12)|(11<<4)|(12<<0), //!<\n
      FSMC_A17_PD12        = (FSMC_A17            <<16)|( 3<<12)|(12<<4)|(12<<0), //!<\n
      FSMC_A18_PD13        = (FSMC_A18            <<16)|( 3<<12)|(13<<4)|(12<<0), //!<\n
      FSMC_A19_PE3         = (FSMC_A19            <<16)|( 4<<12)|( 3<<4)|(12<<0), //!<\n
      FSMC_A2_PF2          = (FSMC_A2             <<16)|( 5<<12)|( 2<<4)|(12<<0), //!<\n
      FSMC_A20_PE4         = (FSMC_A20            <<16)|( 4<<12)|( 4<<4)|(12<<0), //!<\n
      FSMC_A21_PE5         = (FSMC_A21            <<16)|( 4<<12)|( 5<<4)|(12<<0), //!<\n
      FSMC_A22_PE6         = (FSMC_A22            <<16)|( 4<<12)|( 6<<4)|(12<<0), //!<\n
      FSMC_A23_PE2         = (FSMC_A23            <<16)|( 4<<12)|( 2<<4)|(12<<0), //!<\n
      FSMC_A24_PG13        = (FSMC_A24            <<16)|( 6<<12)|(13<<4)|(12<<0), //!<\n
      FSMC_A25_PG14        = (FSMC_A25            <<16)|( 6<<12)|(14<<4)|(12<<0), //!<\n
      FSMC_A3_PF3          = (FSMC_A3             <<16)|( 5<<12)|( 3<<4)|(12<<0), //!<\n
      FSMC_A4_PF4          = (FSMC_A4             <<16)|( 5<<12)|( 4<<4)|(12<<0), //!<\n
      FSMC_A5_PF5          = (FSMC_A5             <<16)|( 5<<12)|( 5<<4)|(12<<0), //!<\n
      FSMC_A6_PF12         = (FSMC_A6             <<16)|( 5<<12)|(12<<4)|(12<<0), //!<\n
      FSMC_A7_PF13         = (FSMC_A7             <<16)|( 5<<12)|(13<<4)|(12<<0), //!<\n
      FSMC_A8_PF14         = (FSMC_A8             <<16)|( 5<<12)|(14<<4)|(12<<0), //!<\n
      FSMC_A9_PF15         = (FSMC_A9             <<16)|( 5<<12)|(15<<4)|(12<<0), //!<\n
      FSMC_BLN1_PE1        = (FSMC_BLN1           <<16)|( 4<<12)|( 1<<4)|(12<<0), //!<\n
      FSMC_CD_PF9          = (FSMC_CD             <<16)|( 5<<12)|( 9<<4)|(12<<0), //!<\n
      FSMC_CLK_PD3         = (FSMC_CLK            <<16)|( 3<<12)|( 3<<4)|(12<<0), //!<\n
      FSMC_D0_PD14         = (FSMC_D0             <<16)|( 3<<12)|(14<<4)|(12<<0), //!<\n
      FSMC_D1_PD15         = (FSMC_D1             <<16)|( 3<<12)|(15<<4)|(12<<0), //!<\n
      FSMC_D10_PE13        = (FSMC_D10            <<16)|( 4<<12)|(13<<4)|(12<<0), //!<\n
      FSMC_D11_PE14        = (FSMC_D11            <<16)|( 4<<12)|(14<<4)|(12<<0), //!<\n
      FSMC_D12_PE15        = (FSMC_D12            <<16)|( 4<<12)|(15<<4)|(12<<0), //!<\n
      FSMC_D13_PD8         = (FSMC_D13            <<16)|( 3<<12)|( 8<<4)|(12<<0), //!<\n
      FSMC_D14_PD9         = (FSMC_D14            <<16)|( 3<<12)|( 9<<4)|(12<<0), //!<\n
      FSMC_D15_PD10        = (FSMC_D15            <<16)|( 3<<12)|(10<<4)|(12<<0), //!<\n
      FSMC_D2_PD0          = (FSMC_D2             <<16)|( 3<<12)|( 0<<4)|(12<<0), //!<\n
      FSMC_D3_PD1          = (FSMC_D3             <<16)|( 3<<12)|( 1<<4)|(12<<0), //!<\n
      FSMC_D4_PE7          = (FSMC_D4             <<16)|( 4<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_D5_PE8          = (FSMC_D5             <<16)|( 4<<12)|( 8<<4)|(12<<0), //!<\n
      FSMC_D6_PE9          = (FSMC_D6             <<16)|( 4<<12)|( 9<<4)|(12<<0), //!<\n
      FSMC_D7_PE10         = (FSMC_D7             <<16)|( 4<<12)|(10<<4)|(12<<0), //!<\n
      FSMC_D8_PE11         = (FSMC_D8             <<16)|( 4<<12)|(11<<4)|(12<<0), //!<\n
      FSMC_D9_PE12         = (FSMC_D9             <<16)|( 4<<12)|(12<<4)|(12<<0), //!<\n
      FSMC_INT2_PG6        = (FSMC_INT2           <<16)|( 6<<12)|( 6<<4)|(12<<0), //!<\n
      FSMC_INT3_PG7        = (FSMC_INT3           <<16)|( 6<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_INTR_PF10       = (FSMC_INTR           <<16)|( 5<<12)|(10<<4)|(12<<0), //!<\n
      FSMC_NBL0_PE0        = (FSMC_NBL0           <<16)|( 4<<12)|( 0<<4)|(12<<0), //!<\n
      FSMC_NCE2_PD7        = (FSMC_NCE2           <<16)|( 3<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_NCE3_PG9        = (FSMC_NCE3           <<16)|( 6<<12)|( 9<<4)|(12<<0), //!<\n
      FSMC_NCE4_1_PG10     = (FSMC_NCE4_1         <<16)|( 6<<12)|(10<<4)|(12<<0), //!<\n
      FSMC_NCE4_2_PG11     = (FSMC_NCE4_2         <<16)|( 6<<12)|(11<<4)|(12<<0), //!<\n
      FSMC_NE1_PD7         = (FSMC_NE1            <<16)|( 3<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_NE2_PG9         = (FSMC_NE2            <<16)|( 6<<12)|( 9<<4)|(12<<0), //!<\n
      FSMC_NE3_PG10        = (FSMC_NE3            <<16)|( 6<<12)|(10<<4)|(12<<0), //!<\n
      FSMC_NE4_PG12        = (FSMC_NE4            <<16)|( 6<<12)|(12<<4)|(12<<0), //!<\n
      FSMC_NIORD_PF6       = (FSMC_NIORD          <<16)|( 5<<12)|( 6<<4)|(12<<0), //!<\n
      FSMC_NIOWR_PF8       = (FSMC_NIOWR          <<16)|( 5<<12)|( 8<<4)|(12<<0), //!<\n
      FSMC_NL_PB7          = (FSMC_NL             <<16)|( 1<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_NOE_PD4         = (FSMC_NOE            <<16)|( 3<<12)|( 4<<4)|(12<<0), //!<\n
      FSMC_NREG_PF7        = (FSMC_NREG           <<16)|( 5<<12)|( 7<<4)|(12<<0), //!<\n
      FSMC_NWAIT_PD6       = (FSMC_NWAIT          <<16)|( 3<<12)|( 6<<4)|(12<<0), //!<\n
      FSMC_NWE_PD5         = (FSMC_NWE            <<16)|( 3<<12)|( 5<<4)|(12<<0), //!<\n
      I2C1_SCL_PB6         = (I2C1_SCL            <<16)|( 1<<12)|( 6<<4)|( 4<<0), //!<\n
      I2C1_SCL_PB8         = (I2C1_SCL            <<16)|( 1<<12)|( 8<<4)|( 4<<0), //!<\n
      I2C1_SDA_PB7         = (I2C1_SDA            <<16)|( 1<<12)|( 7<<4)|( 4<<0), //!<\n
      I2C1_SDA_PB9         = (I2C1_SDA            <<16)|( 1<<12)|( 9<<4)|( 4<<0), //!<\n
      I2C1_SMBA_PB5        = (I2C1_SMBA           <<16)|( 1<<12)|( 5<<4)|( 4<<0), //!<\n
      I2C2_SCL_PB10        = (I2C2_SCL            <<16)|( 1<<12)|(10<<4)|( 4<<0), //!<\n
      I2C2_SCL_PF1         = (I2C2_SCL            <<16)|( 5<<12)|( 1<<4)|( 4<<0), //!<\n
      I2C2_SCL_PH4         = (I2C2_SCL            <<16)|( 7<<12)|( 4<<4)|( 4<<0), //!<\n
      I2C2_SDA_PB11        = (I2C2_SDA            <<16)|( 1<<12)|(11<<4)|( 4<<0), //!<\n
      I2C2_SDA_PF0         = (I2C2_SDA            <<16)|( 5<<12)|( 0<<4)|( 4<<0), //!<\n
      I2C2_SDA_PH5         = (I2C2_SDA            <<16)|( 7<<12)|( 5<<4)|( 4<<0), //!<\n
      I2C2_SMBA_PB12       = (I2C2_SMBA           <<16)|( 1<<12)|(12<<4)|( 4<<0), //!<\n
      I2C2_SMBA_PF2        = (I2C2_SMBA           <<16)|( 5<<12)|( 2<<4)|( 4<<0), //!<\n
      I2C2_SMBA_PH6        = (I2C2_SMBA           <<16)|( 7<<12)|( 6<<4)|( 4<<0), //!<\n
      I2C3_SCL_PA8         = (I2C3_SCL            <<16)|( 0<<12)|( 8<<4)|( 4<<0), //!<\n
      I2C3_SCL_PH7         = (I2C3_SCL            <<16)|( 7<<12)|( 7<<4)|( 4<<0), //!<\n
      I2C3_SDA_PC9         = (I2C3_SDA            <<16)|( 2<<12)|( 9<<4)|( 4<<0), //!<\n
      I2C3_SDA_PH8         = (I2C3_SDA            <<16)|( 7<<12)|( 8<<4)|( 4<<0), //!<\n
      I2C3_SMBA_PA9        = (I2C3_SMBA           <<16)|( 0<<12)|( 9<<4)|( 4<<0), //!<\n
      I2C3_SMBA_PH9        = (I2C3_SMBA           <<16)|( 7<<12)|( 9<<4)|( 4<<0), //!<\n
      I2S2_CK_PB10         = (I2S2_CK             <<16)|( 1<<12)|(10<<4)|( 5<<0), //!<\n
      I2S2_CK_PB13         = (I2S2_CK             <<16)|( 1<<12)|(13<<4)|( 5<<0), //!<\n
      I2S2_CK_PI1          = (I2S2_CK             <<16)|( 8<<12)|( 1<<4)|( 5<<0), //!<\n
      I2S2_MCK_PC6         = (I2S2_MCK            <<16)|( 2<<12)|( 6<<4)|( 5<<0), //!<\n
      I2S2_SD_PB15         = (I2S2_SD             <<16)|( 1<<12)|(15<<4)|( 5<<0), //!<\n
      I2S2_SD_PC3          = (I2S2_SD             <<16)|( 2<<12)|( 3<<4)|( 5<<0), //!<\n
      I2S2_SD_PI3          = (I2S2_SD             <<16)|( 8<<12)|( 3<<4)|( 5<<0), //!<\n
      I2S2_WS_PB12         = (I2S2_WS             <<16)|( 1<<12)|(12<<4)|( 5<<0), //!<\n
      I2S2_WS_PB9          = (I2S2_WS             <<16)|( 1<<12)|( 9<<4)|( 5<<0), //!<\n
      I2S2_WS_PI0          = (I2S2_WS             <<16)|( 8<<12)|( 0<<4)|( 5<<0), //!<\n
      I2S2ext_SD_PB14      = (I2S2ext_SD          <<16)|( 1<<12)|(14<<4)|( 6<<0), //!<\n
      I2S2ext_SD_PC2       = (I2S2ext_SD          <<16)|( 2<<12)|( 2<<4)|( 6<<0), //!<\n
      I2S2ext_SD_PI2       = (I2S2ext_SD          <<16)|( 8<<12)|( 2<<4)|( 6<<0), //!<\n
      I2S3S_CK_PC10        = (I2S3S_CK            <<16)|( 2<<12)|(10<<4)|( 6<<0), //!<\n
      I2S3S_WS_PA15        = (I2S3S_WS            <<16)|( 0<<12)|(15<<4)|( 6<<0), //!<\n
      I2S3_CK_PB3          = (I2S3_CK             <<16)|( 1<<12)|( 3<<4)|( 6<<0), //!<\n
      I2S3_MCK_PC7         = (I2S3_MCK            <<16)|( 2<<12)|( 7<<4)|( 6<<0), //!<\n
      I2S3_SD_PB5          = (I2S3_SD             <<16)|( 1<<12)|( 5<<4)|( 6<<0), //!<\n
      I2S3_SD_PC12         = (I2S3_SD             <<16)|( 2<<12)|(12<<4)|( 6<<0), //!<\n
      I2S3_WS_PA4          = (I2S3_WS             <<16)|( 0<<12)|( 4<<4)|( 6<<0), //!<\n
      I2S3ext_SD_PB4       = (I2S3ext_SD          <<16)|( 1<<12)|( 4<<4)|( 7<<0), //!<\n
      I2S3ext_SD_PC11      = (I2S3ext_SD          <<16)|( 2<<12)|(11<<4)|( 5<<0), //!<\n
      I2S_CKIN_PC9         = (I2S_CKIN            <<16)|( 2<<12)|( 9<<4)|( 5<<0), //!<\n
      OTG_FS_DM_PA11       = (OTG_FS_DM           <<16)|( 0<<12)|(11<<4)|(10<<0), //!<\n
      OTG_FS_DP_PA12       = (OTG_FS_DP           <<16)|( 0<<12)|(12<<4)|(10<<0), //!<\n
      OTG_FS_ID_PA10       = (OTG_FS_ID           <<16)|( 0<<12)|(10<<4)|(10<<0), //!<\n
      OTG_FS_SOF_PA8       = (OTG_FS_SOF          <<16)|( 0<<12)|( 8<<4)|(10<<0), //!<\n
      OTG_HS_DM_PB14       = (OTG_HS_DM           <<16)|( 1<<12)|(14<<4)|(12<<0), //!<\n
      OTG_HS_DP_PB15       = (OTG_HS_DP           <<16)|( 1<<12)|(15<<4)|(12<<0), //!<\n
      OTG_HS_ID_PB12       = (OTG_HS_ID           <<16)|( 1<<12)|(12<<4)|(12<<0), //!<\n
      OTG_HS_SOF_PA4       = (OTG_HS_SOF          <<16)|( 0<<12)|( 4<<4)|(12<<0), //!<\n
      OTG_HS_ULPI_CK_PA5   = (OTG_HS_ULPI_CK      <<16)|( 0<<12)|( 5<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D0_PA3   = (OTG_HS_ULPI_D0      <<16)|( 0<<12)|( 3<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D1_PB0   = (OTG_HS_ULPI_D1      <<16)|( 1<<12)|( 0<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D2_PB1   = (OTG_HS_ULPI_D2      <<16)|( 1<<12)|( 1<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D3_PB10  = (OTG_HS_ULPI_D3      <<16)|( 1<<12)|(10<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D4_PB11  = (OTG_HS_ULPI_D4      <<16)|( 1<<12)|(11<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D5_PB12  = (OTG_HS_ULPI_D5      <<16)|( 1<<12)|(12<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D6_PB13  = (OTG_HS_ULPI_D6      <<16)|( 1<<12)|(13<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_D7_PB5   = (OTG_HS_ULPI_D7      <<16)|( 1<<12)|( 5<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_DIR_PC2  = (OTG_HS_ULPI_DIR     <<16)|( 2<<12)|( 2<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_DIR_PI11 = (OTG_HS_ULPI_DIR     <<16)|( 8<<12)|(11<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_NXT_PC3  = (OTG_HS_ULPI_NXT     <<16)|( 2<<12)|( 3<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_NXT_PH4  = (OTG_HS_ULPI_NXT     <<16)|( 7<<12)|( 4<<4)|(10<<0), //!<\n
      OTG_HS_ULPI_STP_PC0  = (OTG_HS_ULPI_STP     <<16)|( 2<<12)|( 0<<4)|(10<<0), //!<\n
      SDIO_CK_PC12         = (SDIO_CK             <<16)|( 2<<12)|(12<<4)|(12<<0), //!<\n
      SDIO_CMD_PD2         = (SDIO_CMD            <<16)|( 3<<12)|( 2<<4)|(12<<0), //!<\n
      SDIO_D0_PC8          = (SDIO_D0             <<16)|( 2<<12)|( 8<<4)|(12<<0), //!<\n
      SDIO_D1_PC9          = (SDIO_D1             <<16)|( 2<<12)|( 9<<4)|(12<<0), //!<\n
      SDIO_D2_PC10         = (SDIO_D2             <<16)|( 2<<12)|(10<<4)|(12<<0), //!<\n
      SDIO_D3_PC11         = (SDIO_D3             <<16)|( 2<<12)|(11<<4)|(12<<0), //!<\n
      SDIO_D4_PB8          = (SDIO_D4             <<16)|( 1<<12)|( 8<<4)|(12<<0), //!<\n
      SDIO_D5_PB9          = (SDIO_D5             <<16)|( 1<<12)|( 9<<4)|(12<<0), //!<\n
      SDIO_D6_PC6          = (SDIO_D6             <<16)|( 2<<12)|( 6<<4)|(12<<0), //!<\n
      SDIO_D7_PC7          = (SDIO_D7             <<16)|( 2<<12)|( 7<<4)|(12<<0), //!<\n
      SPI1_MISO_PA6        = (SPI1_MISO           <<16)|( 0<<12)|( 6<<4)|( 5<<0), //!<\n
      SPI1_MISO_PB4        = (SPI1_MISO           <<16)|( 1<<12)|( 4<<4)|( 5<<0), //!<\n
      SPI1_MOSI_PA7        = (SPI1_MOSI           <<16)|( 0<<12)|( 7<<4)|( 5<<0), //!<\n
      SPI1_MOSI_PB5        = (SPI1_MOSI           <<16)|( 1<<12)|( 5<<4)|( 5<<0), //!<\n
      SPI1_NSS_PA15        = (SPI1_NSS            <<16)|( 0<<12)|(15<<4)|( 5<<0), //!<\n
      SPI1_NSS_PA4         = (SPI1_NSS            <<16)|( 0<<12)|( 4<<4)|( 5<<0), //!<\n
      SPI1_SCK_PA5         = (SPI1_SCK            <<16)|( 0<<12)|( 5<<4)|( 5<<0), //!<\n
      SPI1_SCK_PB3         = (SPI1_SCK            <<16)|( 1<<12)|( 3<<4)|( 5<<0), //!<\n
      SPI2_MISO_PB14       = (SPI2_MISO           <<16)|( 1<<12)|(14<<4)|( 5<<0), //!<\n
      SPI2_MISO_PC2        = (SPI2_MISO           <<16)|( 2<<12)|( 2<<4)|( 5<<0), //!<\n
      SPI2_MISO_PI2        = (SPI2_MISO           <<16)|( 8<<12)|( 2<<4)|( 5<<0), //!<\n
      SPI2_MOSI_PB15       = (SPI2_MOSI           <<16)|( 1<<12)|(15<<4)|( 5<<0), //!<\n
      SPI2_MOSI_PC3        = (SPI2_MOSI           <<16)|( 2<<12)|( 3<<4)|( 5<<0), //!<\n
      SPI2_MOSI_PI3        = (SPI2_MOSI           <<16)|( 8<<12)|( 3<<4)|( 5<<0), //!<\n
      SPI2_NSS_PB12        = (SPI2_NSS            <<16)|( 1<<12)|(12<<4)|( 5<<0), //!<\n
      SPI2_NSS_PB9         = (SPI2_NSS            <<16)|( 1<<12)|( 9<<4)|( 5<<0), //!<\n
      SPI2_NSS_PI0         = (SPI2_NSS            <<16)|( 8<<12)|( 0<<4)|( 5<<0), //!<\n
      SPI2_SCK_PB10        = (SPI2_SCK            <<16)|( 1<<12)|(10<<4)|( 5<<0), //!<\n
      SPI2_SCK_PB13        = (SPI2_SCK            <<16)|( 1<<12)|(13<<4)|( 5<<0), //!<\n
      SPI2_SCK_PI1         = (SPI2_SCK            <<16)|( 8<<12)|( 1<<4)|( 5<<0), //!<\n
      SPI3_MISO_PB4        = (SPI3_MISO           <<16)|( 1<<12)|( 4<<4)|( 6<<0), //!<\n
      SPI3_MISO_PC11       = (SPI3_MISO           <<16)|( 2<<12)|(11<<4)|( 6<<0), //!<\n
      SPI3_MOSI_PB5        = (SPI3_MOSI           <<16)|( 1<<12)|( 5<<4)|( 6<<0), //!<\n
      SPI3_MOSI_PC12       = (SPI3_MOSI           <<16)|( 2<<12)|(12<<4)|( 6<<0), //!<\n
      SPI3_NSS_PA15        = (SPI3_NSS            <<16)|( 0<<12)|(15<<4)|( 6<<0), //!<\n
      SPI3_NSS_PA4         = (SPI3_NSS            <<16)|( 0<<12)|( 4<<4)|( 6<<0), //!<\n
      SPI3_SCK_PB3         = (SPI3_SCK            <<16)|( 1<<12)|( 3<<4)|( 6<<0), //!<\n
      SPI3_SCK_PC10        = (SPI3_SCK            <<16)|( 2<<12)|(10<<4)|( 6<<0), //!<\n
      TIM10_CH1_PB8        = (TIM10_CH1           <<16)|( 1<<12)|( 8<<4)|( 3<<0), //!<\n
      TIM10_CH1_PF6        = (TIM10_CH1           <<16)|( 5<<12)|( 6<<4)|( 3<<0), //!<\n
      TIM11_CH1_PB9        = (TIM11_CH1           <<16)|( 1<<12)|( 9<<4)|( 3<<0), //!<\n
      TIM11_CH1_PF7        = (TIM11_CH1           <<16)|( 5<<12)|( 7<<4)|( 3<<0), //!<\n
      TIM12_CH1_PB14       = (TIM12_CH1           <<16)|( 1<<12)|(14<<4)|( 9<<0), //!<\n
      TIM12_CH1_PH6        = (TIM12_CH1           <<16)|( 7<<12)|( 6<<4)|( 9<<0), //!<\n
      TIM12_CH2_PB15       = (TIM12_CH2           <<16)|( 1<<12)|(15<<4)|( 9<<0), //!<\n
      TIM12_CH2_PH9        = (TIM12_CH2           <<16)|( 7<<12)|( 9<<4)|( 9<<0), //!<\n
      TIM13_CH1_PA6        = (TIM13_CH1           <<16)|( 0<<12)|( 6<<4)|( 9<<0), //!<\n
      TIM13_CH1_PF8        = (TIM13_CH1           <<16)|( 5<<12)|( 8<<4)|( 9<<0), //!<\n
      TIM14_CH1_PA7        = (TIM14_CH1           <<16)|( 0<<12)|( 7<<4)|( 9<<0), //!<\n
      TIM14_CH1_PF9        = (TIM14_CH1           <<16)|( 5<<12)|( 9<<4)|( 9<<0), //!<\n
      TIM1_BKIN_PA6        = (TIM1_BKIN           <<16)|( 0<<12)|( 6<<4)|( 1<<0), //!<\n
      TIM1_BKIN_PB12       = (TIM1_BKIN           <<16)|( 1<<12)|(12<<4)|( 1<<0), //!<\n
      TIM1_BKIN_PE15       = (TIM1_BKIN           <<16)|( 4<<12)|(15<<4)|( 1<<0), //!<\n
      TIM1_CH1_PA8         = (TIM1_CH1            <<16)|( 0<<12)|( 8<<4)|( 1<<0), //!<\n
      TIM1_CH1_PE9         = (TIM1_CH1            <<16)|( 4<<12)|( 9<<4)|( 1<<0), //!<\n
      TIM1_CH1N_PA7        = (TIM1_CH1N           <<16)|( 0<<12)|( 7<<4)|( 1<<0), //!<\n
      TIM1_CH1N_PB13       = (TIM1_CH1N           <<16)|( 1<<12)|(13<<4)|( 1<<0), //!<\n
      TIM1_CH1N_PE8        = (TIM1_CH1N           <<16)|( 4<<12)|( 8<<4)|( 1<<0), //!<\n
      TIM1_CH2_PA9         = (TIM1_CH2            <<16)|( 0<<12)|( 9<<4)|( 1<<0), //!<\n
      TIM1_CH2_PE11        = (TIM1_CH2            <<16)|( 4<<12)|(11<<4)|( 1<<0), //!<\n
      TIM1_CH2N_PB0        = (TIM1_CH2N           <<16)|( 1<<12)|( 0<<4)|( 1<<0), //!<\n
      TIM1_CH2N_PB14       = (TIM1_CH2N           <<16)|( 1<<12)|(14<<4)|( 1<<0), //!<\n
      TIM1_CH2N_PE10       = (TIM1_CH2N           <<16)|( 4<<12)|(10<<4)|( 1<<0), //!<\n
      TIM1_CH3_PA10        = (TIM1_CH3            <<16)|( 0<<12)|(10<<4)|( 1<<0), //!<\n
      TIM1_CH3_PE13        = (TIM1_CH3            <<16)|( 4<<12)|(13<<4)|( 1<<0), //!<\n
      TIM1_CH3N_PB1        = (TIM1_CH3N           <<16)|( 1<<12)|( 1<<4)|( 1<<0), //!<\n
      TIM1_CH3N_PB15       = (TIM1_CH3N           <<16)|( 1<<12)|(15<<4)|( 1<<0), //!<\n
      TIM1_CH3N_PE12       = (TIM1_CH3N           <<16)|( 4<<12)|(12<<4)|( 1<<0), //!<\n
      TIM1_CH4_PA11        = (TIM1_CH4            <<16)|( 0<<12)|(11<<4)|( 1<<0), //!<\n
      TIM1_CH4_PE14        = (TIM1_CH4            <<16)|( 4<<12)|(14<<4)|( 1<<0), //!<\n
      TIM1_ETR_PA12        = (TIM1_ETR            <<16)|( 0<<12)|(12<<4)|( 1<<0), //!<\n
      TIM1_ETR_PE7         = (TIM1_ETR            <<16)|( 4<<12)|( 7<<4)|( 1<<0), //!<\n
      TIM2_CH1_PA0         = (TIM2_CH1            <<16)|( 0<<12)|( 0<<4)|( 1<<0), //!<\n
      TIM2_CH1_PA15        = (TIM2_CH1            <<16)|( 0<<12)|(15<<4)|( 1<<0), //!<\n
      TIM2_CH1_PA5         = (TIM2_CH1            <<16)|( 0<<12)|( 5<<4)|( 1<<0), //!<\n
      TIM2_CH2_PA1         = (TIM2_CH2            <<16)|( 0<<12)|( 1<<4)|( 1<<0), //!<\n
      TIM2_CH2_PB3         = (TIM2_CH2            <<16)|( 1<<12)|( 3<<4)|( 1<<0), //!<\n
      TIM2_CH3_PA2         = (TIM2_CH3            <<16)|( 0<<12)|( 2<<4)|( 1<<0), //!<\n
      TIM2_CH3_PB10        = (TIM2_CH3            <<16)|( 1<<12)|(10<<4)|( 1<<0), //!<\n
      TIM2_CH4_PA3         = (TIM2_CH4            <<16)|( 0<<12)|( 3<<4)|( 1<<0), //!<\n
      TIM2_CH4_PB11        = (TIM2_CH4            <<16)|( 1<<12)|(11<<4)|( 1<<0), //!<\n
      TIM2_ETR_PA0         = (TIM2_ETR            <<16)|( 0<<12)|( 0<<4)|( 1<<0), //!<\n
      TIM2_ETR_PA15        = (TIM2_ETR            <<16)|( 0<<12)|(15<<4)|( 1<<0), //!<\n
      TIM2_ETR_PA5         = (TIM2_ETR            <<16)|( 0<<12)|( 5<<4)|( 1<<0), //!<\n
      TIM3_CH1_PA6         = (TIM3_CH1            <<16)|( 0<<12)|( 6<<4)|( 2<<0), //!<\n
      TIM3_CH1_PB4         = (TIM3_CH1            <<16)|( 1<<12)|( 4<<4)|( 2<<0), //!<\n
      TIM3_CH1_PC6         = (TIM3_CH1            <<16)|( 2<<12)|( 6<<4)|( 2<<0), //!<\n
      TIM3_CH2_PA7         = (TIM3_CH2            <<16)|( 0<<12)|( 7<<4)|( 2<<0), //!<\n
      TIM3_CH2_PB5         = (TIM3_CH2            <<16)|( 1<<12)|( 5<<4)|( 2<<0), //!<\n
      TIM3_CH2_PC7         = (TIM3_CH2            <<16)|( 2<<12)|( 7<<4)|( 2<<0), //!<\n
      TIM3_CH3_PB0         = (TIM3_CH3            <<16)|( 1<<12)|( 0<<4)|( 2<<0), //!<\n
      TIM3_CH3_PC8         = (TIM3_CH3            <<16)|( 2<<12)|( 8<<4)|( 2<<0), //!<\n
      TIM3_CH4_PB1         = (TIM3_CH4            <<16)|( 1<<12)|( 1<<4)|( 2<<0), //!<\n
      TIM3_CH4_PC9         = (TIM3_CH4            <<16)|( 2<<12)|( 9<<4)|( 2<<0), //!<\n
      TIM3_ETR_PD2         = (TIM3_ETR            <<16)|( 3<<12)|( 2<<4)|( 2<<0), //!<\n
      TIM4_CH1_PB6         = (TIM4_CH1            <<16)|( 1<<12)|( 6<<4)|( 2<<0), //!<\n
      TIM4_CH1_PD12        = (TIM4_CH1            <<16)|( 3<<12)|(12<<4)|( 2<<0), //!<\n
      TIM4_CH2_PB7         = (TIM4_CH2            <<16)|( 1<<12)|( 7<<4)|( 2<<0), //!<\n
      TIM4_CH2_PD13        = (TIM4_CH2            <<16)|( 3<<12)|(13<<4)|( 2<<0), //!<\n
      TIM4_CH3_PB8         = (TIM4_CH3            <<16)|( 1<<12)|( 8<<4)|( 2<<0), //!<\n
      TIM4_CH3_PD14        = (TIM4_CH3            <<16)|( 3<<12)|(14<<4)|( 2<<0), //!<\n
      TIM4_CH4_PB9         = (TIM4_CH4            <<16)|( 1<<12)|( 9<<4)|( 2<<0), //!<\n
      TIM4_CH4_PD15        = (TIM4_CH4            <<16)|( 3<<12)|(15<<4)|( 2<<0), //!<\n
      TIM4_ETR_PE0         = (TIM4_ETR            <<16)|( 4<<12)|( 0<<4)|( 2<<0), //!<\n
      TIM5_CH1_PA0         = (TIM5_CH1            <<16)|( 0<<12)|( 0<<4)|( 2<<0), //!<\n
      TIM5_CH1_PH10        = (TIM5_CH1            <<16)|( 7<<12)|(10<<4)|( 2<<0), //!<\n
      TIM5_CH2_PA1         = (TIM5_CH2            <<16)|( 0<<12)|( 1<<4)|( 2<<0), //!<\n
      TIM5_CH2_PH11        = (TIM5_CH2            <<16)|( 7<<12)|(11<<4)|( 2<<0), //!<\n
      TIM5_CH3_PA2         = (TIM5_CH3            <<16)|( 0<<12)|( 2<<4)|( 2<<0), //!<\n
      TIM5_CH3_PH12        = (TIM5_CH3            <<16)|( 7<<12)|(12<<4)|( 2<<0), //!<\n
      TIM5_CH4_PA3         = (TIM5_CH4            <<16)|( 0<<12)|( 3<<4)|( 2<<0), //!<\n
      TIM5_CH4_PI0         = (TIM5_CH4            <<16)|( 8<<12)|( 0<<4)|( 2<<0), //!<\n
      TIM8_BKIN_PA6        = (TIM8_BKIN           <<16)|( 0<<12)|( 6<<4)|( 3<<0), //!<\n
      TIM8_BKIN_PI4        = (TIM8_BKIN           <<16)|( 8<<12)|( 4<<4)|( 3<<0), //!<\n
      TIM8_CH1_PC6         = (TIM8_CH1            <<16)|( 2<<12)|( 6<<4)|( 3<<0), //!<\n
      TIM8_CH1_PI5         = (TIM8_CH1            <<16)|( 8<<12)|( 5<<4)|( 3<<0), //!<\n
      TIM8_CH1N_PA5        = (TIM8_CH1N           <<16)|( 0<<12)|( 5<<4)|( 3<<0), //!<\n
      TIM8_CH1N_PA7        = (TIM8_CH1N           <<16)|( 0<<12)|( 7<<4)|( 3<<0), //!<\n
      TIM8_CH1N_PH13       = (TIM8_CH1N           <<16)|( 7<<12)|(13<<4)|( 3<<0), //!<\n
      TIM8_CH2_PC7         = (TIM8_CH2            <<16)|( 2<<12)|( 7<<4)|( 3<<0), //!<\n
      TIM8_CH2_PI6         = (TIM8_CH2            <<16)|( 8<<12)|( 6<<4)|( 3<<0), //!<\n
      TIM8_CH2N_PB0        = (TIM8_CH2N           <<16)|( 1<<12)|( 0<<4)|( 3<<0), //!<\n
      TIM8_CH2N_PB14       = (TIM8_CH2N           <<16)|( 1<<12)|(14<<4)|( 3<<0), //!<\n
      TIM8_CH2N_PH14       = (TIM8_CH2N           <<16)|( 7<<12)|(14<<4)|( 3<<0), //!<\n
      TIM8_CH3_PC8         = (TIM8_CH3            <<16)|( 2<<12)|( 8<<4)|( 3<<0), //!<\n
      TIM8_CH3_PI7         = (TIM8_CH3            <<16)|( 8<<12)|( 7<<4)|( 3<<0), //!<\n
      TIM8_CH3N_PB1        = (TIM8_CH3N           <<16)|( 1<<12)|( 1<<4)|( 3<<0), //!<\n
      TIM8_CH3N_PB15       = (TIM8_CH3N           <<16)|( 1<<12)|(15<<4)|( 3<<0), //!<\n
      TIM8_CH3N_PH15       = (TIM8_CH3N           <<16)|( 7<<12)|(15<<4)|( 3<<0), //!<\n
      TIM8_CH4_PC9         = (TIM8_CH4            <<16)|( 2<<12)|( 9<<4)|( 3<<0), //!<\n
      TIM8_CH4_PI2         = (TIM8_CH4            <<16)|( 8<<12)|( 2<<4)|( 3<<0), //!<\n
      TIM8_ETR_PA0         = (TIM8_ETR            <<16)|( 0<<12)|( 0<<4)|( 3<<0), //!<\n
      TIM8_ETR_PI3         = (TIM8_ETR            <<16)|( 8<<12)|( 3<<4)|( 3<<0), //!<\n
      TIM9_CH1_PA2         = (TIM9_CH1            <<16)|( 0<<12)|( 2<<4)|( 3<<0), //!<\n
      TIM9_CH1_PE5         = (TIM9_CH1            <<16)|( 4<<12)|( 5<<4)|( 3<<0), //!<\n
      TIM9_CH2_PA3         = (TIM9_CH2            <<16)|( 0<<12)|( 3<<4)|( 3<<0), //!<\n
      TIM9_CH2_PE6         = (TIM9_CH2            <<16)|( 4<<12)|( 6<<4)|( 3<<0), //!<\n
      UART4_RX_PA1         = (UART4_RX            <<16)|( 0<<12)|( 1<<4)|( 8<<0), //!<\n
      UART4_RX_PC11        = (UART4_RX            <<16)|( 2<<12)|(11<<4)|( 8<<0), //!<\n
      UART4_TX_PA0         = (UART4_TX            <<16)|( 0<<12)|( 0<<4)|( 8<<0), //!<\n
      UART4_TX_PC10        = (UART4_TX            <<16)|( 2<<12)|(10<<4)|( 8<<0), //!<\n
      UART5_RX_PD2         = (UART5_RX            <<16)|( 3<<12)|( 2<<4)|( 8<<0), //!<\n
      UART5_TX_PC12        = (UART5_TX            <<16)|( 2<<12)|(12<<4)|( 8<<0), //!<\n
      UART6_CTS_PG13       = (UART6_CTS           <<16)|( 6<<12)|(13<<4)|( 8<<0), //!<\n
      USART1_CK_PA8        = (USART1_CK           <<16)|( 0<<12)|( 8<<4)|( 7<<0), //!<\n
      USART1_CTS_PA11      = (USART1_CTS          <<16)|( 0<<12)|(11<<4)|( 7<<0), //!<\n
      USART1_RTS_PA12      = (USART1_RTS          <<16)|( 0<<12)|(12<<4)|( 7<<0), //!<\n
      USART1_RX_PA10       = (USART1_RX           <<16)|( 0<<12)|(10<<4)|( 7<<0), //!<\n
      USART1_RX_PB7        = (USART1_RX           <<16)|( 1<<12)|( 7<<4)|( 7<<0), //!<\n
      USART1_TX_PA9        = (USART1_TX           <<16)|( 0<<12)|( 9<<4)|( 7<<0), //!<\n
      USART1_TX_PB6        = (USART1_TX           <<16)|( 1<<12)|( 6<<4)|( 7<<0), //!<\n
      USART2_CK_PA4        = (USART2_CK           <<16)|( 0<<12)|( 4<<4)|( 7<<0), //!<\n
      USART2_CK_PD7        = (USART2_CK           <<16)|( 3<<12)|( 7<<4)|( 7<<0), //!<\n
      USART2_CTS_PA0       = (USART2_CTS          <<16)|( 0<<12)|( 0<<4)|( 7<<0), //!<\n
      USART2_CTS_PD3       = (USART2_CTS          <<16)|( 3<<12)|( 3<<4)|( 7<<0), //!<\n
      USART2_RTS_PA1       = (USART2_RTS          <<16)|( 0<<12)|( 1<<4)|( 7<<0), //!<\n
      USART2_RTS_PD4       = (USART2_RTS          <<16)|( 3<<12)|( 4<<4)|( 7<<0), //!<\n
      USART2_RX_PA3        = (USART2_RX           <<16)|( 0<<12)|( 3<<4)|( 7<<0), //!<\n
      USART2_RX_PD6        = (USART2_RX           <<16)|( 3<<12)|( 6<<4)|( 7<<0), //!<\n
      USART2_TX_PA2        = (USART2_TX           <<16)|( 0<<12)|( 2<<4)|( 7<<0), //!<\n
      USART2_TX_PD5        = (USART2_TX           <<16)|( 3<<12)|( 5<<4)|( 7<<0), //!<\n
      USART3_CK_PB12       = (USART3_CK           <<16)|( 1<<12)|(12<<4)|( 7<<0), //!<\n
      USART3_CK_PC12       = (USART3_CK           <<16)|( 2<<12)|(12<<4)|( 7<<0), //!<\n
      USART3_CK_PD10       = (USART3_CK           <<16)|( 3<<12)|(10<<4)|( 7<<0), //!<\n
      USART3_CTS_PB13      = (USART3_CTS          <<16)|( 1<<12)|(13<<4)|( 7<<0), //!<\n
      USART3_CTS_PD11      = (USART3_CTS          <<16)|( 3<<12)|(11<<4)|( 7<<0), //!<\n
      USART3_RTS_PB14      = (USART3_RTS          <<16)|( 1<<12)|(14<<4)|( 7<<0), //!<\n
      USART3_RTS_PD12      = (USART3_RTS          <<16)|( 3<<12)|(12<<4)|( 7<<0), //!<\n
      USART3_RX_PB11       = (USART3_RX           <<16)|( 1<<12)|(11<<4)|( 7<<0), //!<\n
      USART3_RX_PC11       = (USART3_RX           <<16)|( 2<<12)|(11<<4)|( 7<<0), //!<\n
      USART3_RX_PD9        = (USART3_RX           <<16)|( 3<<12)|( 9<<4)|( 7<<0), //!<\n
      USART3_TX_PB10       = (USART3_TX           <<16)|( 1<<12)|(10<<4)|( 7<<0), //!<\n
      USART3_TX_PC10       = (USART3_TX           <<16)|( 2<<12)|(10<<4)|( 7<<0), //!<\n
      USART3_TX_PD8        = (USART3_TX           <<16)|( 3<<12)|( 8<<4)|( 7<<0), //!<\n
      USART6_CK_PC8        = (USART6_CK           <<16)|( 2<<12)|( 8<<4)|( 8<<0), //!<\n
      USART6_CK_PG7        = (USART6_CK           <<16)|( 6<<12)|( 7<<4)|( 8<<0), //!<\n
      USART6_CTS_PG15      = (USART6_CTS          <<16)|( 6<<12)|(15<<4)|( 8<<0), //!<\n
      USART6_RTS_PG12      = (USART6_RTS          <<16)|( 6<<12)|(12<<4)|( 8<<0), //!<\n
      USART6_RTS_PG8       = (USART6_RTS          <<16)|( 6<<12)|( 8<<4)|( 8<<0), //!<\n
      USART6_RX_PC7        = (USART6_RX           <<16)|( 2<<12)|( 7<<4)|( 8<<0), //!<\n
      USART6_RX_PG9        = (USART6_RX           <<16)|( 6<<12)|( 9<<4)|( 8<<0), //!<\n
      USART6_TX_PC6        = (USART6_TX           <<16)|( 2<<12)|( 6<<4)|( 8<<0), //!<\n
      USART6_TX_PG14       = (USART6_TX           <<16)|( 6<<12)|(14<<4)|( 8<<0), //!<\n
      END_OF_TABLE = -1
    } MAP;

  public:
    //---------------------------------------------------------------
    /*! Set configuration of a GPIO
        \param gpio  Pointer to function register.
                     Use predefined constant \a 'GPIOx'
        \param pinId GPIO pin number (0,...15)
        \param mode  Selected pin mode.
                     Use constants defined in \b MODE, the constants
                     can be combined using bit-or operations.
        \param af    Number of selected alternate function. This
                     parameter is used only, when \b ALTERNATE_FUNC
                     is selected.
    */
    static void set( GPIO_TypeDef *gpio,
                     BYTE          pinId,
                     DWORD         mode,
                     BYTE          af = 0 );

    //---------------------------------------------------------------
    /*! Set GPIO to alternate function

        A GPIO can be connected to a onchip peripheral module. The
        enum \b 'Function' lists all peripheral signals which can be
        connected to a GPIO. This method uses a application specific
        mapping \b 'table'. The application has to define
        this \b 'table' on global scope. The entries of this table
        define on which port pin a peripheral signal is mapped.
        \param func  Selected peripheral signal as alternate function
        \param mode  Selected pin mode.
                     Use constants defined in \b MODE, the constants
                     can be combined using bit-or operations.
        \return
                - true, if \b func is included in \b table
                - false otherwise
    */
    static bool set( Function func,
                     DWORD    mode = 0 );

  public:
    //---------------------------------------------------------------
    /*! This table defines how an alternate function is mapped to the
        port pins. It must be defined by application software. The
        last entry of this table has to be \b 'END_OF_TABLE'.
    */
    static MAP table[];
    static Std::Report report;

}; //PinConfig

}  } //namespace
